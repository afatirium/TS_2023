library(dplyr)
library(tidyverse)
library(xts)
library(zoo)
library(fBasics)  # basicStats()
library(tseries)  # jarque.bera.test()
library(FinTS)    # ArchTest()
library(car)      # durbinWatsonTest()
library(rmgarch)
library(fGarch) # e.g. garchFit()
library(ccgarch)
library(ccgarch2) # not available for R 4.2.0!
library(quantmod)
library(rvest)
library(lubridate)
library(BatchGetSymbols)
library(graphics)
setwd("C:\\Users\\Afat\\Documents\\GitHub\\TS_2023")
# Prepraing the data
start.date <- "2000-01-01"
stop.date  <- "2023-01-01"
# Fetch data for the S&P 500
SP500 <- getSymbols("^GSPC", src = "yahoo",
from = start.date, to = stop.date,
auto.assign = FALSE)
# Fetch data for DAX from Yahoo Finance
DAX <- getSymbols("^GDAXI",
from = start.date, to = stop.date,
auto.assign = FALSE)
# Read the CSV files for Wig20, kospi200, nikkei225
wig20 <- read.csv("wig20_d.csv",
header = TRUE,
sep = ",",
dec = ".",
stringsAsFactors = F)
kospi200 <- read.csv("^kospi_d.csv",
header = TRUE,
sep = ",",
dec = ".",
stringsAsFactors = F)
nikkei225 <- read.csv("^nkx_d.csv",
header = TRUE,
sep = ",",
dec = ".",
stringsAsFactors = F)
## Print the data frames for checking
head(wig20)
head(kospi200)
head(nikkei225)
head(SP500)
head(DAX)
## change date as row index
wig20 <- xts(wig20[, -1],
order.by = as.Date(wig20$Date))
kospi200 <- xts(kospi200[, -1],
order.by = as.Date(kospi200$Date))
nikkei225 <- xts(nikkei225[, -1],
order.by = as.Date(nikkei225$Date))
## select only close values for all indexes
SP500 <- SP500[, 4]
names(SP500) <- "SP500"
wig20 <- wig20[, 4]
names(wig20) <- c("WIG20")
kospi200 <- kospi200[, 4]
names(kospi200) <- c("KOSPI200")
nikkei225 <- nikkei225[, 4]
names(nikkei225) <- c("NKK225")
DAX <- DAX[, 4]
names(DAX) <- c("DAX")
portfolio <- SP500
portfolio$DAX <-DAX$DAX
portfolio$WIG20 <-wig20$WIG20
portfolio$KOSPI200 <- kospi200$KOSPI200
portfolio$NKK225<- nikkei225$NKK225
head(portfolio)
##Handling missing values
any(is.na(portfolio))
portfolio <- portfolio["2018/", ]
tail (portfolio)
stop.date  <- "2023-06-01"
# Fetch data for the S&P 500
SP500 <- getSymbols("^GSPC", src = "yahoo",
from = start.date, to = stop.date,
auto.assign = FALSE)
# Fetch data for DAX from Yahoo Finance
DAX <- getSymbols("^GDAXI",
from = start.date, to = stop.date,
auto.assign = FALSE)
SP500 <- SP500[, 4]
names(SP500) <- "SP500"
names(DAX) <- c("DAX")
portfolio <- SP500
portfolio$DAX <-DAX$DAX
portfolio$WIG20 <-wig20$WIG20
portfolio$KOSPI200 <- kospi200$KOSPI200
portfolio$NKK225<- nikkei225$NKK225
head(portfolio)
##Handling missing values
any(is.na(portfolio))
portfolio <- portfolio["2018/", ]
tail (portfolio)
names(DAX) <- c("DAX")
DAX <- DAX[, 4]
names(DAX) <- c("DAX")
portfolio$DAX <-DAX$DAX
head(portfolio)
portfolio <- portfolio["2018/", ]
tail (portfolio)
head(portfolio)
portfolio <- na.locf(portfolio)
tail (portfolio)
head(portfolio)
##Check
any(is.na(portfolio))
dweek_ <- wday(portfolio)
table(dweek_)
##Still, I have NA values at the begining of the dataset, so I decided to omit these
portfolio <- na.omit(portfolio)
##Check
any(is.na(portfolio))
head(portfolio)
tail(portfolio)
# Prepraing the data
start.date <- "2000-01-01"
stop.date  <- "2023-06-07"
# Fetch data for the S&P 500
SP500 <- getSymbols("^GSPC", src = "yahoo",
from = start.date, to = stop.date,
auto.assign = FALSE)
# Fetch data for DAX from Yahoo Finance
DAX <- getSymbols("^GDAXI",
from = start.date, to = stop.date,
auto.assign = FALSE)
# Read the CSV files for Wig20, kospi200, nikkei225
wig20 <- read.csv("wig20_d.csv",
header = TRUE,
sep = ",",
dec = ".",
stringsAsFactors = F)
kospi200 <- read.csv("^kospi_d.csv",
header = TRUE,
sep = ",",
dec = ".",
stringsAsFactors = F)
nikkei225 <- read.csv("^nkx_d.csv",
header = TRUE,
sep = ",",
dec = ".",
stringsAsFactors = F)
## Print the data frames for checking
head(wig20)
head(kospi200)
head(nikkei225)
head(SP500)
str(wig20)
str(SP500)
str(DAX)
## change date as row index
wig20 <- xts(wig20[, -1],
order.by = as.Date(wig20$Date))
kospi200 <- xts(kospi200[, -1],
order.by = as.Date(kospi200$Date))
nikkei225 <- xts(nikkei225[, -1],
order.by = as.Date(nikkei225$Date))
wig20
head(wig20)
## select only close values for all indexes
SP500 <- SP500[, 4]
names(SP500) <- "SP500"
wig20 <- wig20[, 4]
names(wig20) <- c("WIG20")
kospi200 <- kospi200[, 4]
names(kospi200) <- c("KOSPI200")
nikkei225 <- nikkei225[, 4]
names(nikkei225) <- c("NKK225")
DAX <- DAX[, 4]
names(DAX) <- c("DAX")
portfolio <- SP500
portfolio$DAX <-DAX$DAX
portfolio$WIG20 <-wig20$WIG20
portfolio$KOSPI200 <- kospi200$KOSPI200
portfolio$NKK225<- nikkei225$NKK225
head(portfolio)
##Handling missing values
any(is.na(portfolio))
portfolio <- portfolio["2018/", ]
tail (portfolio)
head(portfolio)
portfolio <- na.locf(portfolio)
##Check
any(is.na(portfolio))
dweek_ <- wday(portfolio)
table(dweek_)
head(portfolio)
##Still, I have NA values at the begining of the dataset, so I decided to omit these
portfolio <- na.omit(portfolio)
##Check
any(is.na(portfolio))
head(portfolio)
tail(portfolio)
portfolio$SP500_r <- 0.2 * diff.xts(log(portfolio$SP500))
portfolio$DAX_r <- 0.2 * diff.xts(log(portfolio$DAX))
portfolio$KOSPI_r <- 0.2 * diff.xts(log(portfolio$KOSPI200))
portfolio$NKK225_r <- 0.2 * diff.xts(log(portfolio$NKK225))
portfolio$WIG20_r <- 0.2 * diff.xts(log(portfolio$WIG20))
head(portfolio)
#Creating of all indexes log returns all together
portfolio$PORTFOLIO_r <- rowSums(portfolio[ , c("SP500_r", "DAX_r", "KOSPI_r", "WIG20_r", "NKK225_r")])
head(portfolio)
## Plot of portfolio returns
plot(portfolio$PORTFOLIO_r,
col = "blue",
main = "Portfolio returns")
# Checking skewness and kurtosis
basic_stats <- basicStats(portfolio$PORTFOLIO_r)
print(
paste("Skewness",basic_stats[rownames(basic_stat) == "Skewness",],
"::",
"Kurtosis",basic_stats[rownames(basic_stat) == "Kurtosis",]
))
library(fBasics)  # basicStats()
# Checking skewness and kurtosis
basic_stats <- basicStats(portfolio$PORTFOLIO_r)
print(
paste("Skewness",basic_stats[rownames(basic_stat) == "Skewness",],
"::",
"Kurtosis",basic_stats[rownames(basic_stat) == "Kurtosis",]
))
# Checking skewness and kurtosis
basic_stats <- basicStats(portfolio$PORTFOLIO_r)
print(
paste("Skewness",basic_stats[rownames(basic_stats) == "Skewness",],
"::",
"Kurtosis",basic_stats[rownames(basic_stats) == "Kurtosis",]
))
# Plotting Histogram of Log-returns
tibble(r = as.numeric(portfolio$PORTFOLIO_r)) %>%
ggplot(aes(r)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "blue") +
stat_function(fun = dnorm,colour="red",
args = list(mean = mean(portfolio$PORTFOLIO_r),
sd = sd(portfolio$PORTFOLIO_r))) +
theme_dark() +
labs(
title = paste("Density of the Portfolio log-returns"),
y = "", x = "",
caption = "source: own calculations"
)
# Plotting Histogram of Log-returns
tibble(r = as.numeric(portfolio$PORTFOLIO_r)) %>%
ggplot(aes(r)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "blue") +
stat_function(fun = dnorm,colour="red",
args = list(mean = mean(portfolio$PORTFOLIO_r),
sd = sd(portfolio$PORTFOLIO_r))) +
theme_dark() +
labs(
title = paste("Density of the Portfolio log-returns"),
y = "", x = "",
caption = "source: own calculations"
)
# Plotting Histogram of Log-returns
tibble(r = as.numeric(portfolio$PORTFOLIO_r)) %>%
ggplot(aes(r)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "blue") +
stat_function(fun = dnorm,colour="red",
args = list(mean = mean(portfolio$PORTFOLIO_r),
sd = sd(portfolio$PORTFOLIO_r))) +
theme_dark() +
labs(
title = paste("Density of the Portfolio log-returns"),
y = "", x = "",
caption = "source: own calculations"
)
head(portfolio)
# I have missing values in the first row because of the diff function, let's omit the first row
portfolio <- na.omit(portfolio)
head(portfolio)
## Plot of portfolio returns
plot(portfolio$PORTFOLIO_r,
col = "blue",
main = "Portfolio returns")
## Plot of portfolio returns
plot(portfolio$PORTFOLIO_r,
col = "blue",
main = "Portfolio returns")
## Plot of portfolio returns
plot(portfolio$PORTFOLIO_r,
col = "blue",
main = "Portfolio returns")
## Plot of portfolio returns
plot(portfolio$PORTFOLIO_r,
col = "blue",
main = "Portfolio returns")
## Plot of portfolio returns
options(scipen = 10)
plot(portfolio$PORTFOLIO_r,
col = "blue",
main = "Portfolio returns")
library(graphics)
plot(portfolio$PORTFOLIO_r,
col = "blue",
main = "Portfolio returns")
# Checking skewness and kurtosis
basic_stats <- basicStats(portfolio$PORTFOLIO_r)
print(
paste("Skewness",basic_stats[rownames(basic_stats) == "Skewness",],
"::",
"Kurtosis",basic_stats[rownames(basic_stats) == "Kurtosis",]
))
# Plotting Histogram of Log-returns
tibble(r = as.numeric(portfolio$PORTFOLIO_r)) %>%
ggplot(aes(r)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "blue") +
stat_function(fun = dnorm,colour="red",
args = list(mean = mean(portfolio$PORTFOLIO_r),
sd = sd(portfolio$PORTFOLIO_r))) +
theme_dark() +
labs(
title = paste("Density of the Portfolio log-returns"),
y = "", x = "",
caption = "source: own calculations"
)
plot(SP500$SP500,
col = "blue",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "Daily close price of SP500")
plot(SP500$SP500,
col = "blue",
major.ticks = "years",
grid.ticks.on = "years",
grid.ticks.lty = 3,
main = "Daily close price of SP500")
# Plotting Histogram of Log-returns
tibble(r = as.numeric(portfolio$PORTFOLIO_r)) %>%
ggplot(aes(r)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "blue") +
stat_function(fun = dnorm,colour="red",
args = list(mean = mean(portfolio$PORTFOLIO_r),
sd = sd(portfolio$PORTFOLIO_r))) +
theme_dark() +
labs(
title = paste("Density of the Portfolio log-returns"),
y = "", x = "",
caption = "source: own calculations"
)
# Plotting Histogram of Log-returns
tibble(r = as.numeric(portfolio$PORTFOLIO_r)) %>%
ggplot(aes(r)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "blue") +
stat_function(fun = dnorm,colour="red",
args = list(mean = mean(portfolio$PORTFOLIO_r),
sd = sd(portfolio$PORTFOLIO_r))) +
theme_dark() +
labs(
title = paste("Density of the Portfolio log-returns"),
y = "", x = "",
caption = "source: own calculations"
)
# Plotting Histogram of Log-returns
tibble(r = as.numeric(portfolio$PORTFOLIO_r)) %>%
ggplot(aes(r)) +
geom_histogram(aes(y =..density..),
colour = "black",
fill = "blue") +
stat_function(fun = dnorm,colour="red",
args = list(mean = mean(portfolio$PORTFOLIO_r),
sd = sd(portfolio$PORTFOLIO_r))) +
theme_dark() +
labs(
title = paste("Density of the Portfolio log-returns"),
y = "", x = "",
caption = "source: own calculations"
)
